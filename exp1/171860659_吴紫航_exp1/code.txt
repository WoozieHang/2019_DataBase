1.建立四个基本表

CREATE TABLE  IF NOT EXISTS `Course`(
`id` Int NOT NULL,
`title` char(20) NOT NULL,
`dept_name` char(2),
`credit` INT,
PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Student`(
`id` INT NOT NULL,
`name` CHAR(20) NOT NULL,
`dept_name` CHAR(20),
PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `SC`	(
`student_id` INT NOT NULL,
`course_id` INT NOT NULL,
`year` INT,
`grade` INT,
PRIMARY KEY(`student_id`,`course_id`)
);

CREATE TABLE IF NOT EXISTS `Teacher`(
`id` INT NOT NULL,
`name` CHAR(8) NOT NULL,
`dept_name` CHAR(2),
`salary` INT,
PRIMARY KEY(`id`)
);

2.修改基本表
2.1. 在 Student 表中加入属性 age（smallint 型)

ALTER table student ADD `age` SMALLINT;
SELECT * FROM student;

2.2. 将 Student 表中的属性 age 类型改为 int 型.

ALTER table student CHANGE `age` `age` INT;
SELECT* FROM student;

3.插入数据

3.1. 向 Student 表插入不少于 10 条数据

INSERT INTO student
(`id`,`name`,`dept_name`,`age`)
VALUES
(0000,'N0','D0',20),
(0001,'N1','D1',20),
(0002,'N2','D2',20),
(0003,'N3','D3',20),
(0004,'N4','D4',20),
(0005,'N5','D5',20),
(0006,'N6','D6',20),
(0007,'N7','D7',20),
(0008,'N8','D8',20),
(0009,'N9','D9',20)
;
SELECT * FROM student;

3.2. 向 Course 表插入不少于 5 条数据。注意，应该包含计算机系（CS），包含数据库课（DB）

INSERT INTO course
(`id`,`title`,`dept_name`,`credit`)
VALUES
(000,'DataBase','CS',3),
(001,'C1','D1',2),
(002,'C2','D2',3),
(003,'C3','D3',4),
(004,'C4','D4',5),
(005,'C5','D5',2),
(006,'C6','D6',3)
;
SELECT * FROM course;

3.3. 向 SC 表插入不少于 20 条数据。注意，应该包含 2018 年前后课程


INSERT INTO SC
(`student_id`,`course_id`,`year`,`grade`)
VALUES
(0000,000,2017,90),
(0000,001,2017,80),
(0001,000,2018,89),
(0001,002,2018,77),
(0002,003,2017,98),
(0002,004,2017,97),
(0003,005,2019,95),
(0003,006,2019,67),
(0004,004,2018,87),
(0005,003,2018,80),
(0006,001,2017,79),
(0006,002,2018,86),
(0007,003,2018,79),
(0007,004,2019,94),
(0008,005,2017,93),
(0008,006,2018,77),
(0009,003,2018,76),
(0009,001,2018,88),
(0009,000,2018,67)
;
SELECT * FROM SC;


3.4. 向 Teacher 表插入不少于 3 条数据。注意，应该包含姓胡的教师

INSERT INTO teacher
(`id`,`name`,`dept_name`,`salary`)
VALUES
(0000,'Zhangsan','D1',30000),
(0001,'Lisi','D2',20000),
(0002,'Hutao','D3',24000),
(0003,'Huwei','CS',99999),
(0004,'Wangwu','CS',50000)
;
SELECT * FROM teacher;

4.1 找出所有至少选修了一门计算机系课程的学生姓名，保证结果中没有重复的姓名。
select distinct student.`name` 
from student,course,sc
where (sc.course_id=course.id) and (course.dept_name='CS')and(sc.student_id=student.id)
;

4.2 找出所有姓胡的教师的姓名和院系
select `name`, `dept_name`
from teacher
where `name` like 'Hu%';

4.3 找出所有没有选修在 2018 年之前（不含 2018 年）开设的任何课程的学生的ID和姓名
select distinct student.id,student.name
from student
where student.id not in ( 
select distinct student.id
from student,sc
where (sc.year<2018)and (sc.student_id=student.id)
);

4.4 找出每个系教师的最高工资值。可以假设每个系至少有一位教师
select teacher.dept_name, max(teacher.salary)
from teacher
group by teacher.dept_name

5.  修改数据
5.1. 将数据库课的学生成绩全部加 2 分
SET SQL_SAFE_UPDATES=0; 

update sc set sc.grade=sc.grade+2
where sc.course_id in(
select distinct course.id
from course
where course.title='DataBase')
;

select *
from sc,course
where (course.title='DataBase')and(sc.course_id=course.id)
;

6.  删除数据
6.1. 删除均分不足 80 分的所有学生的选课记录

delete from sc
where sc.student_id in(
select * from(
select sc.student_id
from sc
group by sc.student_id
having avg(sc.grade)<80
)a)
;

select * from sc;

7.  视图操作
7.1. 创建一个视图，记录每位学生已修课程的总学分数
create view v as
select sc.student_id,sum(course.credit)
from course,sc
where sc.course_id=course.id
group by sc.student_id;

select * from v;

8.  删除基本表
8.1. 删除 SC 表

drop table sc;
